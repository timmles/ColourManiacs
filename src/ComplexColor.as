package  {		public class ComplexColor{				private var colorName:String = "";		private var hex:uint = 0;		private var rby:Array = [0, 0, 0];				public function ComplexColor(_colorName:String, _hex:uint, _rby:Array) {			colorName = _colorName;			hex = _hex;			rby = _rby		}						public function getHex():uint {			return hex;		}				public function countRemainingColors():int {			return rby[0] + rby[1] + rby[2];		}				public function addColor(color:uint):Boolean {			switch(color) {				case ColorSpectrum.RED:					return addRed();				break;				case ColorSpectrum.BLUE:					return addBlue();				break;				case ColorSpectrum.YELLOW:					return addYellow();				break;			}			return false;		}				function addRed():Boolean {			if (rby[0] > 0) {				rby[0] -= 1;				return true;			}			return false;		}				function addBlue():Boolean {			if (rby[1] > 0) {				rby[1] -= 1;				return true;			}			return false;		}				function addYellow():Boolean {			if (rby[2] > 0) {				rby[2] -= 1;				return true;			}			return false;		}	}}